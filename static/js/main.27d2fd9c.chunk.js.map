{"version":3,"sources":["Component/Home/Home.js","Component/Login/Login.js","App.js","serviceWorker.js","Reducers/Reducer.js","Store/Store.js","index.js"],"names":["URL","Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","ws","WebSocket","componentDidMount","console","log","location","state","user","setState","onopen","onmessage","evt","message","JSON","parse","data","id","Rd","Date","Rh","getHours","Rm","getMinutes","time","chatData","concat","toConsumableArray","dispatch","type","payload","onclose","textValidate","home","e","preventDefault","history","push","pathname","sendData","innerHTML","undefined","d","h","m","msg","send","stringify","sendbuttonActive","_this2","sendbuttonState","active","transform","transition","inActive","react_default","a","createElement","className","onClick","bind","style","margin","right","top","bottom","position","map","obj","index","key","display","flexDirection","direction","ref","data-ph","contentEditable","onMouseDown","alt","src","React","Component","connect","Login","valiadteuser","username","value","onSubmit","placeholder","password","width","outline","background","border","App","createBrowserHistory","listen","_","window","scrollTo","react_router","onUpdate","exact","path","component","Boolean","hostname","match","initialState","Reducer","arguments","length","action","_objectSpread","Store","createStore","reducer","compose","applyMiddleware","thunk","ReactDOM","render","es","store","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.27d2fd9c.chunk.js","sourcesContent":["import React from 'react';\nimport './Home.css'\nimport { connect } from 'react-redux';\nimport { relative } from 'path';\nconst URL = 'wss://echo.websocket.org'\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            sendbuttonActive: false,\n            chatData: this.props.chatData\n\n\n        }\n    }\n    ws = new WebSocket(URL)\n    componentDidMount = () => {\n      console.log(this.props.location.state.user)\n      this.setState({user:this.props.location.state.user})\n        this.ws.onopen = () => {\n            // on connecting, do nothing but log it to the console\n            console.log('connected')\n        }\n\n        this.ws.onmessage = evt => {\n            // on receiving a message, add it to the list of messages\n            const message = JSON.parse(evt.data)\n            message.id = \"1\"\n            var Rd = new Date();\n            var Rh = Rd.getHours() < 10 ? \"0\" + Rd.getHours() : Rd.getHours();\n            var Rm = Rd.getMinutes() < 10 ? \"0\" + Rd.getMinutes() : Rd.getMinutes()\n            message.time = Rh + \":\" + Rm\n            this.setState({\n                chatData: [message, ...this.state.chatData]\n            }, () => {\n                this.props.dispatch({ type: \"CHAT_DATA\", payload: message })\n                /// this.message.innerHTML = \" \"\n\n            })\n            console.log(message)\n            //this.addMessage(message)\n        }\n\n        this.ws.onclose = () => {\n            console.log('disconnected')\n            // automatically try to reconnect on connection loss\n            this.setState({\n                ws: new WebSocket(URL),\n            })\n        }\n\n    }\n    textValidate = () => {\n        //    alert(32)\n        //     this.message.addEventListener('keyup', (e) => {\n        //         alert(23)\n        //         // and here is how to detect the enter key\n        //         if (13 === e.keyCode) {\n        //             alert(\"this should appear\");\n        //         }        \n        //     });\n\n        //    if(this.message.innerHTML !==null && this.message.innerHTML !==undefined){\n        //        alert(23)\n        //     this.setState({sendbuttonActive:true})\n        //    }\n        //    else if(this.message.innerHTML===\"\"){\n        //     this.setState({sendbuttonActive:false})\n        //    }\n    }\n\n    home=(e)=>{\n        e.preventDefault()\n        this.props.history.push({\n            pathname: '/'\n   \n         })\n    }\n\n    sendData = (e) => {\n        // console.log(this.message.innerHTML)\n        e.preventDefault()\n\n        if (this.message.innerHTML !== null && this.message.innerHTML !== '' && this.message.innerHTML !== undefined) {\n\n            var d = new Date();\n            var h = d.getHours() < 10 ? \"0\" + d.getHours() : d.getHours();\n            var m = d.getMinutes() < 10 ? \"0\" + d.getMinutes() : d.getMinutes();\n            let msg = { \"id\": \"0\", \"message\": this.message.innerHTML, time: h + \":\" + m }\n\n            this.setState({\n                chatData: [msg, ...this.state.chatData]\n            }, () => {\n                this.message.innerHTML = \" \"\n                this.props.dispatch({ type: \"CHAT_DATA\", payload: msg })\n            })\n\n            this.ws.send(JSON.stringify(msg))\n        }\n    }\n\n    render() {\n        const sendbuttonState = {\n            active: {\n                transform: 'rotate(90deg)',\n                transition: 'transform 0.8s ease-in-out'\n            },\n            inActive: {\n                transform: 'rotate(-90deg)',\n                transition: 'transform 0.8s ease-in-out'\n            }\n\n        }\n\n        return (\n            <div>\n                <div className=\"navBar\">\n                    <div className=\"user\" >\n                        <div className=\"avaterDivUser\">\n                            <div className=\"chatlistAvaterUser\"></div>\n                        </div>\n                        <div className=\"chatListmeasageUser\">\n                            <h5>{this.state.user}</h5>\n                            <p>12:32 PM</p>\n                        </div>\n                        <div onClick={this.home.bind(this)} style={{margin:'auto',right:'20px',top:'0',bottom:'0', position:'absolute'}}>\n                            <p>Log Out</p>\n                            </div>\n                    </div>\n\n                </div>\n                <div className=\"homeDiv\">\n\n\n                    <div className=\"leftside\">\n\n                        <div className=\"chatlist\" >\n                            <div className=\"avaterDiv\">\n                                <div className=\"chatlistAvater\"></div>\n                            </div>\n                            <div className=\"chatListmeasage\">\n                                <h5>Abhimanyu</h5>\n                                <p>Hi</p>\n                            </div>\n                        </div>\n\n                        <div className=\"chatlist\" >\n                            <div className=\"avaterDiv\">\n                                <div className=\"chatlistAvater\"></div>\n                            </div>\n                            <div className=\"chatListmeasage\">\n                                <h5>Abhimanyu</h5>\n                                <p>Hi</p>\n                            </div>\n\n                        </div>\n                        <div className=\"chatlist\" >\n                            <div className=\"avaterDiv\">\n                                <div className=\"chatlistAvater\"></div>\n                            </div>\n                            <div className=\"chatListmeasage\">\n                                <h5>Abhimanyu</h5>\n                                <p>Hi</p>\n                            </div>\n                        </div>\n\n                    </div>\n                    <div className=\"rightside\">\n\n\n                        <div className=\"chatDiv\">\n                            {\n                                this.state.chatData.map((obj, index) => {\n                                    if (obj.id === '0') {\n                                        return (\n                                            <div key={index} style={{ display: 'flex', flexDirection: 'row' }}>\n                                                <div className=\"userLeft\"></div>\n                                                <div className=\"leftChatbul\"> {obj.message}\n                                                </div>\n                                                <p className=\"time\"> {obj.time}</p>\n\n                                            </div>\n                                        )\n                                    }\n                                    else if (obj.id === '1') {\n                                        return (\n\n                                            <div key={index} style={{ display: 'flex', flexDirection: 'row-reverse' }}>\n                                                <div className=\"userRight\"></div>\n                                                <div style={{ direction: \"rtl\" }} className=\"rightChatbul\">{obj.message}</div>\n                                                <p className=\"time\">{obj.time}</p>\n                                            </div>\n                                        )\n                                    }\n\n                                })\n\n                            }\n\n\n\n\n\n\n\n\n\n\n                        </div>\n                        <div className=\"msgBox\">\n                            <div className=\"textBox\" >\n                                <div className=\"noOutline\" ref={message => this.message = message} data-ph=\"Type here ..\" contentEditable='true' ></div>\n\n                            </div>\n                            <div onMouseDown={this.sendData.bind(this)} className=\"btnSend\">\n                                <img alt=\"send button \" style={this.state.sendbuttonActive === true ? sendbuttonState.active : sendbuttonState.inActive} className=\"sendIcon\" src=\"buttons/send.svg\" />\n                            </div>\n                        </div>\n                    </div>\n\n\n\n                </div>\n            </div>\n        )\n    }\n\n\n\n\n}\nconst mapStateToProps = (state) => (\n    {\n        chatData: state.chatData\n    }\n);\n\nexport default connect(mapStateToProps)(Home)","import React from 'react';\nimport './Login.css'\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n\n        }\n    }\n    componentDidMount = () => {\n\n\n    }\n    valiadteuser=(e)=>{\n        e.preventDefault()\n        this.props.history.push({\n            pathname: '/home',\n            state:{user:this.username.value}\n   \n         })\n    }\n    render() {\n\n        return (\n            <div className=\"loginDiv\">\n                <div className=\"loginBanner\">\n                    \n\n                    <form onSubmit={this.valiadteuser.bind(this)}>\n                            \n                            \n                        <input ref={username=>this.username=username} type=\"text\" placeholder=\"username\">\n\n                        </input>\n\n                        <input ref={password=>this.password=password} type=\"password\" placeholder=\"password\">\n\n                        </input>\n                        <button type=\"submit\" style={{ width:'100%',outline: 'none',background: \"transparent\", border: 'none' }}>\n                                <div className=\"btnDiv\">\n                                    <div className=\"btn\">\n                                        <div> Login</div>\n                                    </div>\n                                </div>\n                            </button>\n                        </form>\n                    \n                </div>\n            </div>\n        )\n    }\n\n\n\n\n}\n\nexport default Login","import React from 'react';\nimport './App.css';\nimport Home from './Component/Home/Home'\nimport Login from './Component/Login/Login'\nimport { createBrowserHistory } from 'history';\nimport {  Router, Route,Switch } from \"react-router-dom\";\n\nfunction App() {\n  const history = createBrowserHistory()\n\n  history.listen(_ => {\n    window.scrollTo(0, 0)\n  })\n\n  return (\n    <Router onUpdate={() => window.scrollTo(0, 0)} history={history} >\n      <div>\n        <Switch>\n          <Route exact path=\"/home\" component={Home} />\n          <Route path=\"/\" component={Login} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nconst initialState = {\n    chatData:[]\n}\n\nconst Reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case \"CHAT_DATA\":\n            return {...state,chatData:[action.payload,...state.chatData]}\n        default:\n    }        return state\n}     \n\nexport default Reducer","import reducer  from '../Reducers/Reducer'\nimport thunk from 'redux-thunk';\nimport {createStore, compose, applyMiddleware} from 'redux';\n\nconst Store = createStore(reducer,\n    compose(applyMiddleware(thunk))\n);\n\nexport default Store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"react-redux\";\nimport Store from './Store/Store'\n\nReactDOM.render(<Provider store={Store}><App /> </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}